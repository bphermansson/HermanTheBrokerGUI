@using HermanTheBrokerGUI.Classes
@using HermanTheBrokerGUI.Models
@using HermanTheBrokerGUI.Services
@if (houseData != null)
{
    <ul>
        @foreach (var item in houseData)
        {
            <li>Hus nummer @item.HouseId</li>
            <li>@item.PostalAddress, @item.City</li>
            <p><a href="/housedetails/@item.HouseId" class="link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">Detaljer</a></p>
            @if (loggedIn == true)
            {
                <p><a href="edithouse/@item.HouseId" class="link-secondary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">Redigera hus</a></p>
                <p><a href="deletehouse/@item.HouseId" class="link-danger link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover">Ta bort hus</a></p>
            }
            <hr />
        }
    </ul>
}
else
{
    <p>Loading data...</p>
}

@code {
    [Parameter]
    public listData listData { get; set; }

    private IEnumerable<House> houseData;
    private bool loggedIn;

    [Inject]
    private ApiService ApiService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        loggedIn = ApiService.LoginCheck();

        if (listData.whichList == "AllHouses")
        {
            houseData = await ApiService.GetAllHouses();
        }
        else if (listData.whichList == "BrokersHouses")
        {
            houseData = await ApiService.GetHousesByBrokerEmail(listData.brokerEmail);
        }
    }
}
