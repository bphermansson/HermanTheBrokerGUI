@page "/newhouse"
@using HermanTheBrokerGUI.Models
@using HermanTheBrokerGUI.Services

<h3>Lägg till hus</h3>

<EditForm Model="@FormValues" OnValidSubmit="Submit" FormName="edithouse">
    <div class="col-sm-2">
        <label>
            Hus Id:
            <InputNumber @bind-Value="FormValues.HouseId" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Kategori:
            <InputSelect @bind-Value="CategoryString">
                <option value="@Category.Bostadsrättslägenhet">@Category.Bostadsrättslägenhet</option>
                <option value="@Category.Bostadsrättsradhus">@Category.Bostadsrättsradhus</option>
                <option value="@Category.Villa">@Category.Villa</option>
                <option value="@Category.Fritidshus">@Category.Fritidshus</option>
            </InputSelect>
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Gatuadress:
            <InputText @bind-Value="FormValues.PostalAddress" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Stad:
            <InputText @bind-Value="FormValues!.City" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Utgångspris:
            <InputNumber @bind-Value="FormValues!.AskingPrice" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Bostadsyta:
            <InputNumber @bind-Value="FormValues!.LivingArea" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Biyta:
            <InputNumber @bind-Value="FormValues!.SecondaryArea" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Tomtyta:
            <InputNumber @bind-Value="FormValues!.GardenArea" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Beskrivning:
            <InputTextArea @bind-Value="FormValues.Description" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Antal rum:
            <InputNumber @bind-Value="FormValues.NoOfRooms" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Månadsavgift:
            <InputNumber @bind-Value="FormValues.MonthlyFee" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Driftskostnad per år:
            <InputNumber @bind-Value="FormValues.YearlyRunningCosts" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Mäklare:
            <InputText @bind-Value="FormValues!.BrokerId" />
        </label>
    </div>
    <div class="col-sm-2">
        <label>
            Byggår:
            <InputNumber @bind-Value="FormValues.BuildYear" />
        </label>
    </div>
    <div class="col-sm-2">
        <button>Spara</button>
    </div>
</EditForm>
@if (res && submitted)
{
    <p>Hus tillagt.</p>
}
else if (!res && submitted)
{
    <p>Något gick fel.</p>
}

@code {
    [SupplyParameterFromForm]
    public string selectedString { get; set; }
    [SupplyParameterFromForm]
    public string selectedBrokerId { get; set; }
    [SupplyParameterFromForm]
    House FormValues { get; set; } = new();
    List<Broker> Brokers { get; set; } = new();
    public Category? CategoryString { get; set; }

    [Inject]
    private ApiService ApiService { get; set; }

    protected override void OnInitialized() => FormValues ??= new();
    bool res;
    bool submitted = false;

    protected override async Task OnInitializedAsync()
    {
        Brokers = await ApiService.GetAllBrokers();
    }

    private async Task Submit()
    {
        submitted = true;
        FormValues.Broker = await ApiService.GetBrokerByEmail(selectedString);
        FormValues.BrokerId = FormValues.Broker.Id;
        res = await ApiService.Newhouse(FormValues);
    }
}
