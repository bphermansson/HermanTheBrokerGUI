@page "/searchhouses"
@using HermanTheBrokerGUI.Services
@using HermanTheBrokerGUI.Models
@using HermanTheBrokerGUI.Classes
<h3>Sök objekt</h3>

<div class="row">
    <div class="col-md-4">
        <form @onsubmit="SubmitArea" method="post" @formname="searchArea">
            <AntiforgeryToken />
            <h2>Sök på storlek</h2>
            <div>
                <label>
                    Minsta area:
                    <InputNumber @bind-Value="Searchobject!.Minsize" />
                </label>
            </div>
            <div>
                <label>
                    Största area:
                    <InputNumber @bind-Value="Searchobject!.Maxsize" />
                </label>
            </div>
            <div>
                <button type="submit">Sök area</button>
            </div>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <form @onsubmit="SubmitCity" method="post" @formname="searchCity">
            <AntiforgeryToken />
            <h2>Sök i stad</h2>
            <div>
                <label>
                    Önskad stad:
                    <InputText @bind-Value="Searchobject!.City" />
                </label>
            </div>
            <div>
                <button type="submit">Sök stad</button>
            </div>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <form @onsubmit="SubmitRooms" method="post" @formname="searchNoofrooms">
            <AntiforgeryToken />
            <h2>Sök på antal rum</h2>
            <div>
                <label>
                    Antal rum:
                    <InputNumber @bind-Value="Searchobject!.Noofrooms" />
                </label>
            </div>
            <div>
                <button type="submit">Sök antal rum</button>
            </div>
        </form>
    </div>
</div>

@if (houseData != null)
{
    <hr />
    <h2>Sökresultat</h2>
    <ul>
        @foreach (var item in houseData)
        {
            <p>Hus nummer @item.HouseId</p>
            <li>@item.Category @item.LivingArea m2</li>
            <li>@item.PostalAddress, @item.City</li>
            <li><a href="/housedetails/@item.HouseId">Detaljer</a></li>
            <hr />
        }
        @if(houseData.Count() == 0)
        {
            <p>Inga resultat</p>
        }
    </ul>
}
else if (submitted)
{
    <p>Loading data...</p>
}
@code {
    [SupplyParameterFromForm]
    public Searchobject? Searchobject { get; set; }
    protected override void OnInitialized() => Searchobject ??= new();
    private IEnumerable<House> houseData;
    bool submitted = false;

    [Inject]
    private ApiService ApiService { get; set; }

    private async Task SubmitArea()
    {
        submitted = true;
        var srch = new Searchobject();
        if(srch.Minsize==null)
        {
            srch.Minsize = 0;
        }
        if (srch.Maxsize == null)
        {
            srch.Maxsize = 10000;
        }
        srch.Minsize = Searchobject?.Minsize;
        srch.Maxsize = Searchobject?.Maxsize;
        houseData = await ApiService.SearchHouses(srch);
    }
    private async Task SubmitRooms()
    {
        submitted = true;
        var srch = new Searchobject();
        srch.Noofrooms = Searchobject?.Noofrooms;
        if (srch.Noofrooms == null)
        {
            houseData = null;
        }
        else
        {
            houseData = await ApiService.SearchHouses(srch);
        }
    }
    private async Task SubmitCity()
    {
        submitted = true;
        var srch = new Searchobject();
        srch.City = Searchobject?.City;
        if (srch.City == null)
        {
            houseData = null;
        }
        else
        {
            houseData = await ApiService.SearchHouses(srch);
        }
    }
}
