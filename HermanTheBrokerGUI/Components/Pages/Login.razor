@page "/login"
@using HermanTheBrokerGUI.Classes
@using HermanTheBrokerGUI.Services
@using HermanTheBrokerGUI.Models

<h3>Logga in</h3>
<EditForm Model="@Loginobject" FormName="login" OnSubmit="Submit">
    <h3>Logga in</h3>
    <hr />
    <div class="form-group row">
        <label for="email" class="col-sm-2 col-form-label">
            Email
        </label>
        <div class="col-sm-2">
            <InputText id="email" class="form-control" placeholder="Namn"
                       @bind-Value="Loginobject.Email" />
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-sm-2 col-form-label">
            Lösenord
        </label>
        <div class="col-sm-2">
            <InputText id="password" class="form-control" placeholder="Lösenord"
                       @bind-Value="Loginobject.Password" />
        </div>
    </div>
    <div class="form-group row">
        <label for="newAccount" class="col-sm-2 col-form-label">
            Nytt konto?
        </label>
        <div class="col-sm-1">
            <InputCheckbox id="newaccount" class="form-check-input"
            @bind-Value="Loginobject.Register" />

        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit">Logga in/Registrera</button>

        </div>
    </div>
</EditForm>

@loginResult
@regResult
@if (loginResult != null && loginResult != "Fel användarnamn eller lösenord." || regResult == "Kontot registrerat.")
{
    <div class="nav-item px-3">
        <NavLink class="nav-link" href="/">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Gå vidare
        </NavLink>
    </div>
}

@code {
    [SupplyParameterFromForm]
    public loginObject? Loginobject { get; set; }
    protected override void OnInitialized() => Loginobject ??= new();

    [Inject]
    private ApiService ApiService { get; set; }

    private string loginResult, regResult;

    private async Task Submit()
    {
        var lin = new loginObject()
        {
            Email = string.Empty,
            Password = string.Empty,
            Register = false
        };
        lin.Email = Loginobject?.Email;
        lin.Password = Loginobject?.Password;
        lin.Register = Loginobject.Register;
        if(lin.Register == false)
        {
            loginResult = await ApiService.Login(lin);
        }
        else
        {
            regResult = await ApiService.Register(lin);
        }
    }
}
