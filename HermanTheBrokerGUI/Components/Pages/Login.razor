@page "/login"
@using HermanTheBrokerGUI.Classes
@using HermanTheBrokerGUI.Services
@using HermanTheBrokerGUI.Models

<h3>Logga in</h3>

<form method="post" @onsubmit="SubmitLogin" @formname="login">
    <AntiforgeryToken />
     <div>
        <label>
            Name:
             <InputText @bind-Value="Loginobject!.Email" />
        </label>
    </div> 
    <div>
        <label>
            Password:
             <InputText @bind-Value="Loginobject!.Password" />
        </label>
    </div>
    <div>
        <label>Nytt konto?</label>
        <InputCheckbox @bind-Value="Loginobject!.Register"></InputCheckbox>
    </div>
    <div>
        <button type="submit">Logga in/Registrera</button>
    </div>
</form>

@loginMessage
@regMessage

@code {
    [SupplyParameterFromForm]
    public loginObject? Loginobject { get; set; }
    protected override void OnInitialized() => Loginobject ??= new();

    [Inject]
    private ApiService ApiService { get; set; }

    private bool loginResult, regResult;
    private string loginMessage, regMessage;

    protected override async Task OnInitializedAsync()
    {
    }

    private async Task SubmitLogin()
    {
        var lin = new loginObject()
        {
            Email = string.Empty,
            Password = string.Empty,
            Register = false
        };
        lin.Email = Loginobject?.Email;
        lin.Password = Loginobject?.Password;
        lin.Register = Loginobject.Register;
        if(lin.Register == false)
        {
            loginResult = await ApiService.Login(lin);
            if (loginResult == true)
            {
                loginMessage = "Inloggad.";
            }
            else
            {
                loginMessage = "Fel användarnamn/lösenord.";
            }
        }
        else
        {
            regResult = await ApiService.Register(lin);
            if (regResult == true)
            {
                regMessage = "Konto registrerat.";
            }
            else
            {
                regMessage = "Något gick fel.";
            }
        }
    }
}
